<?xml version="1.0" encoding="UTF-8"?>

<!-- scan: 当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。 scanPeriod: 设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。 
	debug: 当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。 -->
<configuration debug="false" scan="true" scanPeriod="600 seconds">
	<!--定义日志文件的存储地址 勿在 LogBack 的配置中使用相对路径 -->
	<property name="LOG_HOME" value="F:/temp/applog/springboot-helloworld" />
	<!-- 控制台输出 -->
	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
		<!-- 日志输出代码 -->
		<encoder>
			<!-- 格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符 -->
			<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS}[%level][%thread]%logger--%msg%n
			</pattern>
			<charset>UTF-8</charset> <!-- 设置字符集 -->
		</encoder>
	</appender>

	<!-- 按照每天生成日志文件 -->
	<appender name="FILE"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!--日志文件输出的文件名 -->
			<FileNamePattern>${LOG_HOME}/faith_%d{yyyy-MM-dd}_%i.log
			</FileNamePattern>

			<!-- 如果按天来回滚，则最大保存时间为 （数字+1） 天，（数字+1）天之前的都将被清理掉 -->
			<maxHistory>30</maxHistory>
			<cleanHistoryOnStart>true</cleanHistoryOnStart>
			<!-- 单独一个文件最大为5M -->
			<TimeBasedFileNamingAndTriggeringPolicy
				class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<MaxFileSize>5MB</MaxFileSize>
			</TimeBasedFileNamingAndTriggeringPolicy>
		</rollingPolicy>
		<encoder>
			格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符
			<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS}[%level][%thread]%logger--%msg%n
			</pattern>
			<charset>UTF-8</charset> 设置字符集
		</encoder>
	</appender>
	<appender name="LOGSTASH"
		class="net.logstash.logback.appender.LogstashTcpSocketAppender">
		<destination>172.18.128.86:514</destination>
		 
		<!-- encoder必须配置,有多种可选 -->
		<encoder charset="UTF-8" class="net.logstash.logback.encoder.LogstashEncoder"> 
			<customFields>{"appname":"springboot-helloworld"}</customFields> </encoder>
		
		<!-- <destination>destination1.domain.com:4560</destination> <destination>destination2.domain.com:4560</destination> 
			<destination>destination3.domain.com:4560</destination> -->
		<!-- <connectionStrategy> <roundRobin> <connectionTTL>5 minutes</connectionTTL> 
			</roundRobin> </connectionStrategy> -->
	</appender>

	<!-- <Encoding>UTF-8</Encoding> --> <!-- 1.1.7及以上新版本不支持 -->
	<!-- show parameters for hibernate sql 专为 Hibernate 定制 -->
	<!-- 日志中输出sql操作语句 -->
	<!--<logger name="org.hibernate" level="DEBUG" /> -->
	<!-- 显示了绑定给 SQL 的参数列表 -->
	<!-- <logger name="org.hibernate.type.descriptor.sql.BasicBinder" level="TRACE" 
		/> -->
	<!-- 显示了查询后记录的字段值。注意这两个属性是要设置到 TRACE 级别， 所以在一般日志的全局 DEBUG 级别之下，它们会表示不受影响。 -->
	<!-- <logger name="org.hibernate.type.descriptor.sql.BasicExtractor" level="TRACE" 
		/> <logger name="org.hibernate.SQL" level="DEBUG" /> <logger name="org.hibernate.type" 
		level="TRACE" /> <logger name="org.hibernate.engine.QueryParameters" level="DEBUG" 
		/> <logger name="org.hibernate.engine.query.HQLQueryPlan" level="DEBUG" /> --><!-- 控制输出SQL语句 -->

	<!-- 日志输出级别 -->
	<root level="info">
		<appender-ref ref="FILE" />
		<appender-ref ref="STDOUT" />
		<appender-ref ref="LOGSTASH" />
	</root>
</configuration>